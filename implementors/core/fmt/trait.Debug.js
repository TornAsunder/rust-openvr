(function() {var implementors = {};
implementors['openvr_sys'] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='enum' href='openvr_sys/enum.Enum_ETrackedDeviceClass.html' title='openvr_sys::Enum_ETrackedDeviceClass'>Enum_ETrackedDeviceClass</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='enum' href='openvr_sys/enum.Enum_EVRInitError.html' title='openvr_sys::Enum_EVRInitError'>Enum_EVRInitError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='enum' href='openvr_sys/enum.Enum_EVRRenderModelError.html' title='openvr_sys::Enum_EVRRenderModelError'>Enum_EVRRenderModelError</a>",];implementors['openvr'] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/common/struct.Size.html' title='openvr::common::Size'>Size</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/common/struct.Position.html' title='openvr::common::Position'>Position</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/common/struct.Rectangle.html' title='openvr::common::Rectangle'>Rectangle</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/common/struct.DistortionCoordinates.html' title='openvr::common::DistortionCoordinates'>DistortionCoordinates</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='enum' href='openvr/common/enum.Eye.html' title='openvr::common::Eye'>Eye</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/common/struct.TextureBounds.html' title='openvr::common::TextureBounds'>TextureBounds</a>","impl&lt;Err: <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> + <a class='trait' href='openvr/error/trait.RawError.html' title='openvr::error::RawError'>RawError</a> + <a class='trait' href='https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html' title='core::marker::Copy'>Copy</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/error/struct.Error.html' title='openvr::error::Error'>Error</a>&lt;Err&gt;","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='enum' href='openvr/tracking/enum.TrackedDeviceStringProperty.html' title='openvr::tracking::TrackedDeviceStringProperty'>TrackedDeviceStringProperty</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='enum' href='openvr/tracking/enum.TrackedDeviceClass.html' title='openvr::tracking::TrackedDeviceClass'>TrackedDeviceClass</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/tracking/struct.TrackedDevicePose.html' title='openvr::tracking::TrackedDevicePose'>TrackedDevicePose</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html' title='core::fmt::Debug'>Debug</a> for <a class='struct' href='openvr/tracking/struct.TrackedDevicePoses.html' title='openvr::tracking::TrackedDevicePoses'>TrackedDevicePoses</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
